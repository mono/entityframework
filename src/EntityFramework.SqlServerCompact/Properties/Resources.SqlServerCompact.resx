<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentIsNullOrWhitespace" xml:space="preserve">
    <value>The argument '{0}' cannot be null, empty or contain only white space.</value>
  </data>
  <data name="ADP_CanNotRetrieveServerGeneratedKey" xml:space="preserve">
    <value>Records were updated, but the values were not retrieved back. See internal error for more details.</value>
  </data>
  <data name="ADP_InvalidCommandTimeOut" xml:space="preserve">
    <value>SqlCeCommand.CommandTimeout does not support non-zero values.</value>
  </data>
  <data name="ADP_InvalidCommandType" xml:space="preserve">
    <value>The CommandType enumeration value, {0}, is invalid.</value>
  </data>
  <data name="InvalidStringArgument" xml:space="preserve">
    <value>Parameter '{0}' is not valid. String arguments cannot be empty.</value>
  </data>
  <data name="DatabaseDoesNotExist" xml:space="preserve">
    <value>The specified database doesn't exists.</value>
  </data>
  <data name="Mapping_Provider_WrongConnectionType" xml:space="preserve">
    <value>The connection given is not of type '{0}'.</value>
  </data>
  <data name="Update_SqlEntitySetWithoutDmlFunctions" xml:space="preserve">
    <value>Unable to update the EntitySet '{0}' because it has a DefiningQuery and no &lt;{1}&gt; element exists in the &lt;{2}&gt; element to support the current operation.</value>
  </data>
  <data name="Mapping_Provider_WrongManifestType" xml:space="preserve">
    <value>The provider manifest given is not of type '{0}'.</value>
  </data>
  <data name="ProviderReturnedNullForGetDbInformation" xml:space="preserve">
    <value>The provider returned null for the informationType '{0}'.</value>
  </data>
  <data name="UnableToDetermineStoreVersion" xml:space="preserve">
    <value>Could not determine store version; a valid store connection or a version hint is required.</value>
  </data>
  <data name="InvalidDatePartArgumentExpression" xml:space="preserve">
    <value>DATEPART argument to function '{0}.{1}' must be a literal string</value>
  </data>
  <data name="InvalidDatePartArgumentValue" xml:space="preserve">
    <value>'{0}' is not a valid value for DATEPART argument in '{1}.{2}' function</value>
  </data>
  <data name="NiladicFunctionsCannotHaveParameters" xml:space="preserve">
    <value>Functions attributed as NiladicFunction='true' in the provider manifest cannot have parameter declarations</value>
  </data>
  <data name="UnknownExpressionType" xml:space="preserve">
    <value>'{0}' is an unknown expression type.</value>
  </data>
  <data name="FullOuterJoinNotSupported" xml:space="preserve">
    <value>FULL OUTER JOIN is not supported by SQL Server Compact.</value>
  </data>
  <data name="CollateInOrderByNotSupported" xml:space="preserve">
    <value>COLLATE subclause in the ORDER BY clause is not supported by SQL Server Compact.</value>
  </data>
  <data name="DMLQueryCannotReturnResults" xml:space="preserve">
    <value>Server-generated keys and server-generated values are not supported by SQL Server Compact.</value>
  </data>
  <data name="SkipNotSupportedException" xml:space="preserve">
    <value>SKIP clause is not supported by SQL Server Compact.</value>
  </data>
  <data name="WithTiesNotSupportedException" xml:space="preserve">
    <value>WITH TIES subclause is not supported by SQL Server Compact.</value>
  </data>
  <data name="UserDefinedFunctionsNotSupported" xml:space="preserve">
    <value>User defined functions are not supported by SQL Server Compact.</value>
  </data>
  <data name="TVFsNotSupported" xml:space="preserve">
    <value>Table valued functions are not supported by SQL Server Compact.</value>
  </data>
  <data name="DistinctAggregatesNotSupported" xml:space="preserve">
    <value>DISTINCT attribute is not supported in aggregate functions by SQL Server Compact.</value>
  </data>
  <data name="ProviderDoesNotSupportType" xml:space="preserve">
    <value>The type '{0}' is not supported by SQL Server Compact.</value>
  </data>
  <data name="NoStoreTypeForEdmType" xml:space="preserve">
    <value>There is no store type corresponding to the EDM type '{0}' of primitive type '{1}'.</value>
  </data>
  <data name="StoredProceduresNotSupported" xml:space="preserve">
    <value>Stored procedures are not supported by SQL Server Compact.</value>
  </data>
  <data name="FunctionNotSupported" xml:space="preserve">
    <value>The function '{0}' is not supported by SQL Server Compact.</value>
  </data>
  <data name="UpdateStatementCannotBeGeneratedForAcquiringLock" xml:space="preserve">
    <value>Failed when preparing table {0} for write as write-consistency cannot be guaranteed. Try adding a writable column to the table.</value>
  </data>
  <data name="Update_NotSupportedServerGenKey" xml:space="preserve">
    <value>Server-generated keys are only supported for identity columns. More than one column is marked as server generated in table '{0}'.</value>
  </data>
  <data name="Update_NotSupportedIdentityType" xml:space="preserve">
    <value>Server-generated keys are only supported for identity columns. The column '{0}' has type '{1}', which is not a valid type for an identity column.</value>
  </data>
  <data name="ADP_InternalProviderError" xml:space="preserve">
    <value>Internal .NET Framework Data Provider error {0}.</value>
  </data>
  <data name="ADP_InvalidEnumerationValue" xml:space="preserve">
    <value>The {0} enumeration value, {1}, is not valid.</value>
  </data>
  <data name="ADP_NotSupportedEnumerationValue" xml:space="preserve">
    <value>The {0} enumeration value, {1}, is not supported by the {2} method.</value>
  </data>
  <data name="ADP_ConnectionStringSyntax" xml:space="preserve">
    <value>Format of the initialization string does not conform to specification starting at index {0}.</value>
  </data>
  <data name="ADP_InvalidConnectionOptionValue" xml:space="preserve">
    <value>Value is not valid for key '{0}'.</value>
  </data>
  <data name="InvalidConnectionTypeException" xml:space="preserve">
    <value>The parameter specified for the connection is not supported and is not of the SqlCeConnection type.</value>
  </data>
  <data name="ComputedColumnsNotSupported" xml:space="preserve">
    <value>The store generated pattern 'Computed' is supported for properties that are of type 'timestamp'  or 'rowversion' only.</value>
  </data>
  <data name="IncompleteDatabaseCreation" xml:space="preserve">
    <value>The database creation succeeded, but the creation of the database objects did not. See inner exception for more details.</value>
  </data>
  <data name="ServerGeneratedGuidKeyNotSupported" xml:space="preserve">
    <value>Server generated GUID column "{0}" cannot be part of the key.</value>
  </data>
  <data name="DeleteDatabaseNotAllowedWithinTransaction" xml:space="preserve">
    <value>Database file cannot be deleted within a transaction scope.</value>
  </data>
  <data name="CreateDatabaseNotAllowedWithinTransaction" xml:space="preserve">
    <value>Database file cannot be created within a transaction scope.</value>
  </data>
  <data name="DeleteDatabaseWithOpenConnection" xml:space="preserve">
    <value>Database file cannot be deleted. Close all open connections before calling DeleteDatabase().</value>
  </data>
  <data name="ColumnGreaterThanMaxLengthNotSupported" xml:space="preserve">
    <value>{0} column with MaxLength greater than {1} is not supported.</value>
  </data>
  <data name="ELinq_DbFunctionDirectCall" xml:space="preserve">
    <value>This function can only be invoked from LINQ to Entities.</value>
  </data>
  <data name="AutomaticMigration" xml:space="preserve">
    <value>AutomaticMigration</value>
  </data>
  <data name="SqlCeColumnRenameNotSupported" xml:space="preserve">
    <value>Direct column renaming is not supported by SQL Server Compact. To rename a column in SQL Server Compact, you will need to recreate it.</value>
    <comment>## ExceptionType=Migrations.Infrastructure.MigrationsException</comment>
  </data>
  <data name="InvalidDatabaseName" xml:space="preserve">
    <value>The database name '{0}' is invalid. Database names must be of the form [&lt;schema_name&gt;.]&lt;object_name&gt;.</value>
    <comment>## ExceptionType=ArgumentException</comment>
  </data>
  <data name="SqlServerMigrationSqlGenerator_UnknownOperation" xml:space="preserve">
    <value>The current migration SQL generator ({0}) is unable to generate SQL for operations of type '{1}'. Call SetSqlGenerator on your migrations configuration class to use a different SQL generator. To create a custom SQL generator that can handle this type of operation, add a new class that derives from {0} and override Generate(MigrationOperation).</value>
    <comment>## ExceptionType=InvalidOperationException</comment>
  </data>
</root>