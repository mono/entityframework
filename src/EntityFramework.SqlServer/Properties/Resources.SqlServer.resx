<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentIsNullOrWhitespace" xml:space="preserve">
    <value>The argument '{0}' cannot be null, empty or contain only white space.</value>
  </data>
  <data name="SqlProvider_GeographyValueNotSqlCompatible" xml:space="preserve">
    <value>The specified DbGeography value could not be converted to a SQL Server compatible value.</value>
  </data>
  <data name="SqlProvider_GeometryValueNotSqlCompatible" xml:space="preserve">
    <value>The specified DbGeometry value could not be converted to a SQL Server compatible value.</value>
  </data>
  <data name="ProviderReturnedNullForGetDbInformation" xml:space="preserve">
    <value>The provider returned null for the informationType '{0}'.</value>
  </data>
  <data name="ProviderDoesNotSupportType" xml:space="preserve">
    <value>The underlying provider does not support the type '{0}'.</value>
  </data>
  <data name="NoStoreTypeForEdmType" xml:space="preserve">
    <value>There is no store type corresponding to the conceptual side type '{0}' of primitive type '{1}'.</value>
  </data>
  <data name="Mapping_Provider_WrongManifestType" xml:space="preserve">
    <value>The provider manifest given is not of type '{0}'.</value>
  </data>
  <data name="ADP_InternalProviderError" xml:space="preserve">
    <value>Internal .NET Framework Data Provider error {0}.</value>
  </data>
  <data name="UnableToDetermineStoreVersion" xml:space="preserve">
    <value>Could not determine storage version; a valid storage connection or a version hint is required.</value>
  </data>
  <data name="SqlProvider_NeedSqlDataReader" xml:space="preserve">
    <value>Spatial readers can only be produced from readers of type SqlDataReader. A reader of type {0} was provided.</value>
  </data>
  <data name="SqlProvider_Sql2008RequiredForSpatial" xml:space="preserve">
    <value>Spatial types and functions are only supported by SQL Server 2008 or later.</value>
  </data>
  <data name="SqlProvider_SqlTypesAssemblyNotFound" xml:space="preserve">
    <value>Spatial types and functions are not available for this provider because the assembly 'Microsoft.SqlServer.Types' version 10 or higher could not be found. </value>
  </data>
  <data name="SqlProvider_IncompleteCreateDatabase" xml:space="preserve">
    <value>The database creation succeeded, but the creation of the database objects failed. The consequent attempt to drop the database also failed. See InnerException for details.</value>
  </data>
  <data name="SqlProvider_IncompleteCreateDatabaseAggregate" xml:space="preserve">
    <value>See InnerExceptions for details.</value>
  </data>
  <data name="SqlProvider_DdlGeneration_MissingInitialCatalog" xml:space="preserve">
    <value>Unable to complete operation. The supplied SqlConnection does not specify an initial catalog or AttachDBFileName.</value>
  </data>
  <data name="SqlProvider_DdlGeneration_CannotDeleteDatabaseNoInitialCatalog" xml:space="preserve">
    <value>Unable to delete the database. There is no database that corresponds to the given AttachDBFileName.</value>
  </data>
  <data name="SqlProvider_DdlGeneration_CannotTellIfDatabaseExists" xml:space="preserve">
    <value>A connection to the specified database could not be opened. See InnerException for details. However, there is a database registered with the server that corresponds to the given AttachDbFileName.</value>
  </data>
  <data name="SqlProvider_CredentialsMissingForMasterConnection" xml:space="preserve">
    <value>This operation requires a connection to the 'master' database. Unable to create a connection to the 'master' database because the original database connection has been opened and credentials have been removed from the connection string. Supply an unopened connection.</value>
  </data>
  <data name="SqlProvider_InvalidGeographyColumn" xml:space="preserve">
    <value>Expected a geography value, found a value of type {0}.</value>
  </data>
  <data name="SqlProvider_InvalidGeometryColumn" xml:space="preserve">
    <value>Expected a geometry value, found a value of type {0}.</value>
  </data>
  <data name="Mapping_Provider_WrongConnectionType" xml:space="preserve">
    <value>The connection is not of type '{0}'.</value>
  </data>
  <data name="Update_NotSupportedServerGenKey" xml:space="preserve">
    <value>Store-generated keys are only supported for identity columns. More than one key column is marked as server generated in table '{0}'.</value>
  </data>
  <data name="Update_NotSupportedIdentityType" xml:space="preserve">
    <value>Store-generated keys are only supported for identity columns. Key column '{0}' has type '{1}', which is not a valid type for an identity column.</value>
  </data>
  <data name="Update_SqlEntitySetWithoutDmlFunctions" xml:space="preserve">
    <value>Unable to update the EntitySet '{0}' because it has a DefiningQuery and no &lt;{1}&gt; element exists in the &lt;{2}&gt; element to support the current operation.</value>
  </data>
  <data name="Cqt_General_UnsupportedExpression" xml:space="preserve">
    <value>The expression '{0}' is of an unsupported type. </value>
  </data>
  <data name="SqlGen_ApplyNotSupportedOnSql8" xml:space="preserve">
    <value>The execution of this query requires the APPLY operator, which is not supported in versions of SQL Server earlier than SQL Server 2005.</value>
  </data>
  <data name="SqlGen_NiladicFunctionsCannotHaveParameters" xml:space="preserve">
    <value>Functions listed in the provider manifest that are attributed as NiladicFunction='true' cannot have parameter declarations.</value>
  </data>
  <data name="SqlGen_InvalidDatePartArgumentExpression" xml:space="preserve">
    <value>The DATEPART argument to the '{0}.{1}' function must be a literal string.</value>
  </data>
  <data name="SqlGen_InvalidDatePartArgumentValue" xml:space="preserve">
    <value>'{0}' is not a valid value for the DATEPART argument in the '{1}.{2}' function.</value>
  </data>
  <data name="SqlGen_TypedNaNNotSupported" xml:space="preserve">
    <value>Constant expressions of type {0} with a value of NaN are not supported by SQL Server.</value>
  </data>
  <data name="SqlGen_TypedPositiveInfinityNotSupported" xml:space="preserve">
    <value>Constant expressions of type {0} with a value of {1}.PositiveInfinity are not supported by SQL Server.</value>
  </data>
  <data name="SqlGen_TypedNegativeInfinityNotSupported" xml:space="preserve">
    <value>Constant expressions of type {0} with a value of {1}.NegativeInfinity are not supported by SQL Server.</value>
  </data>
  <data name="SqlGen_PrimitiveTypeNotSupportedPriorSql10" xml:space="preserve">
    <value>There is no store type that maps to the EDM type '{0}' on versions of SQL Server earlier than SQL Server 2008.</value>
  </data>
  <data name="SqlGen_CanonicalFunctionNotSupportedPriorSql10" xml:space="preserve">
    <value>The EDM function '{0}' is not supported on versions of SQL Server earlier than SQL Server 2008.</value>
  </data>
  <data name="SqlGen_ParameterForLimitNotSupportedOnSql8" xml:space="preserve">
    <value>Parameters as arguments to a TOP sub-clause and a LIMIT sub-clause in a query, or a LimitExpression in a command tree, are not supported in versions of SQL Server earlier than SQL Server 2005.</value>
  </data>
  <data name="SqlGen_ParameterForSkipNotSupportedOnSql8" xml:space="preserve">
    <value>Parameters as arguments to a SKIP sub-clause in a query, or a SkipExpression in a command tree, are not supported in versions of SQL Server earlier than SQL Server 2005.</value>
  </data>
  <data name="Spatial_WellKnownGeographyValueNotValid" xml:space="preserve">
    <value>The specified DbWellKnownGeographyValue does not contain either Well-Known Text or Well-Known Binary.</value>
  </data>
  <data name="Spatial_WellKnownGeometryValueNotValid" xml:space="preserve">
    <value>The specified DbWellKnownGeometryValue does not contain either Well-Known Text or Well-Known Binary.</value>
  </data>
  <data name="SqlSpatialServices_ProviderValueNotSqlType" xml:space="preserve">
    <value>The specified provider value is not compatible with this spatial services implementation. A value is required of type '{0}'.</value>
  </data>
  <data name="SqlSpatialservices_CouldNotCreateWellKnownGeographyValueNoSrid" xml:space="preserve">
    <value>A Spatial Reference System Identifier (SRID) value could not be retrieved from the specified DbGeography value.</value>
  </data>
  <data name="SqlSpatialservices_CouldNotCreateWellKnownGeographyValueNoWkbOrWkt" xml:space="preserve">
    <value>The specified DbGeography value did not provide either Well-Known Binary or Well-Known Text.</value>
  </data>
  <data name="SqlSpatialservices_CouldNotCreateWellKnownGeometryValueNoSrid" xml:space="preserve">
    <value>A Spatial Reference System Identifier (SRID) value could not be retrieved from the specified DbGeometry value.</value>
  </data>
  <data name="SqlSpatialservices_CouldNotCreateWellKnownGeometryValueNoWkbOrWkt" xml:space="preserve">
    <value>The specified DbGeometry value did not provide either Well-Known Binary or Well-Known Text.</value>
  </data>
  <data name="TransientExceptionDetected" xml:space="preserve">
    <value>An exception has been raised that is likely due to a transient failure. If you are connecting to a SQL Azure database consider using SqlAzureExecutionStrategy.</value>
  </data>
  <data name="ELinq_DbFunctionDirectCall" xml:space="preserve">
    <value>This function can only be invoked from LINQ to Entities.</value>
  </data>
  <data name="AutomaticMigration" xml:space="preserve">
    <value>AutomaticMigration</value>
  </data>
  <data name="InvalidDatabaseName" xml:space="preserve">
    <value>The database name '{0}' is invalid. Database names must be of the form [&lt;schema_name&gt;.]&lt;object_name&gt;.</value>
    <comment>## ExceptionType=ArgumentException</comment>
  </data>
  <data name="SqlServerMigrationSqlGenerator_UnknownOperation" xml:space="preserve">
    <value>The current migration SQL generator ({0}) is unable to generate SQL for operations of type '{1}'. Call SetSqlGenerator on your migrations configuration class to use a different SQL generator. To create a custom SQL generator that can handle this type of operation, add a new class that derives from {0} and override Generate(MigrationOperation).</value>
    <comment>## ExceptionType=InvalidOperationException</comment>
  </data>
</root>